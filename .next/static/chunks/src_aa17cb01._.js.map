{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/components/Header.tsx"],"sourcesContent":["\n'use client';\n\nimport Link from \"next/link\";\nimport { useRouter } from 'next/navigation';\nimport { signOut } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { ArrowRight, Code, LogOut, User, Loader2, ExternalLink, BookOpen, Trophy, HelpCircle } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"framer-motion\";\n\n// Logo component with glassmorphism effect\nfunction CodeClashLogo() {\n  return (\n    <div className=\"relative flex items-center gap-2 group\">\n      <div className=\"absolute -inset-1 bg-gradient-to-r from-primary/30 to-accent/30 rounded-lg blur opacity-60 group-hover:opacity-100 transition duration-300\"></div>\n      <div className=\"relative flex items-center justify-center bg-black/20 backdrop-blur-sm p-1.5 rounded-lg border border-white/10 shadow-lg\">\n        <Code className=\"h-5 w-5 text-primary\" />\n      </div>\n      <span className=\"relative text-xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary to-accent\">CodeClash</span>\n    </div>\n  );\n}\n\nexport function Header() {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n\n  const handleLogout = async () => {\n    if (auth) {\n        await signOut(auth);\n    }\n    router.push('/');\n  };\n\n  return (\n    <motion.header \n      initial={{ y: -100, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"sticky top-0 z-50 w-full border-b border-white/10 bg-background/60 backdrop-blur-xl shadow-md\"\n    >\n      <div className=\"container flex h-20 max-w-7xl mx-auto items-center justify-between px-4 sm:px-6 lg:px-8\">\n        <Link href=\"/\" className=\"flex items-center\" prefetch={false}>\n          <CodeClashLogo />\n        </Link>\n        <nav className=\"hidden md:flex items-center gap-8 text-sm font-medium\">\n          <Link \n            href=\"/lobby\" \n            className=\"flex items-center gap-1.5 text-muted-foreground hover:text-primary transition-colors py-2\" \n            prefetch={false}\n          >\n            <BookOpen className=\"h-4 w-4\" />\n            <span>Topics</span>\n          </Link>\n          <Link \n            href=\"/leaderboard\" \n            className=\"flex items-center gap-1.5 text-muted-foreground hover:text-primary transition-colors py-2\" \n            prefetch={false}\n          >\n            <Trophy className=\"h-4 w-4\" />\n            <span>Leaderboard</span>\n          </Link>\n          <Link \n            href=\"/#how-it-works\" \n            className=\"flex items-center gap-1.5 text-muted-foreground hover:text-primary transition-colors py-2\" \n            prefetch={false}\n          >\n            <HelpCircle className=\"h-4 w-4\" />\n            <span>How it Works</span>\n          </Link>\n          {/* GitHub link removed */}\n        </nav>\n        <div className=\"flex items-center gap-4\">\n          {loading ? (\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n          ) : user ? (\n             <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"relative h-10 w-10 rounded-full overflow-hidden border border-white/20 bg-black/20 backdrop-blur-sm hover:bg-white/10 transition-colors\">\n                  <Avatar className=\"h-10 w-10\">\n                    <AvatarImage src={user.photoURL || undefined} alt={user.displayName || 'User'} />\n                    <AvatarFallback className=\"bg-gradient-to-br from-primary/20 to-accent/20\">\n                      {user.displayName?.substring(0,2).toUpperCase() || <UserIcon className=\"h-5 w-5 text-primary\" />}\n                    </AvatarFallback>\n                  </Avatar>\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"w-56 bg-card/80 backdrop-blur-lg border border-white/10\" align=\"end\" forceMount>\n                <DropdownMenuLabel className=\"font-normal\">\n                  <div className=\"flex flex-col space-y-1\">\n                    <p className=\"text-sm font-medium leading-none\">{user.displayName}</p>\n                    <p className=\"text-xs leading-none text-muted-foreground\">\n                      {user.email}\n                    </p>\n                  </div>\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator className=\"bg-white/10\" />\n                <DropdownMenuItem \n                  className=\"hover:bg-white/10 focus:bg-white/10 cursor-pointer\"\n                  asChild\n                >\n                  <Link href=\"/profile\">\n                    <User className=\"mr-2 h-4 w-4 text-primary\" />\n                    <span>Profile</span>\n                  </Link>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator className=\"bg-white/10\" />\n                <DropdownMenuItem \n                  onClick={handleLogout}\n                  className=\"hover:bg-white/10 focus:bg-white/10 cursor-pointer\"\n                >\n                  <LogOut className=\"mr-2 h-4 w-4 text-primary\" />\n                  <span>Log out</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          ) : (\n            <>\n              <Button \n                variant=\"ghost\" \n                className=\"border border-white/10 bg-black/20 backdrop-blur-sm hover:bg-white/10 transition-colors\"\n                asChild\n              >\n                <Link href=\"/login\">Log In</Link>\n              </Button>\n              <Button \n                className=\"bg-gradient-to-r from-primary to-accent text-primary-foreground hover:opacity-90 transition-opacity shadow-lg shadow-primary/20\"\n                asChild\n              >\n                <Link href=\"/signup\" className=\"flex items-center gap-1\">\n                  Sign Up\n                  <ArrowRight className=\"ml-1 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n                </Link>\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n    </motion.header>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/ai/flows/generateProblemFlow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A flow to generate coding problems using AI.\n *\n * - generateProblem - A function that generates a new coding problem based on a topic.\n * - GenerateProblemInput - The input type for the generateProblem function.\n * - Problem - The return type for the generateProblem function, representing a coding problem.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { Problem } from '@/lib/problems';\n\n// A schema for valid JSON values, restricted to primitives and arrays of\n// primitives/arrays. This is a workaround for limitations in the backend API's\n// schema parser, which dislikes fully generic object definitions.\nconst literalSchema = z.union([z.string(), z.number(), z.boolean(), z.null()]);\nconst jsonSchema: z.ZodType<any> = z.lazy(() =>\n  z.union([literalSchema, z.array(jsonSchema)])\n);\n\n\nconst TestCaseSchema = z.object({\n  input: z.array(jsonSchema).describe(\"An array of arguments for the function. This MUST be an array of pure JSON values (primitives or arrays). Objects are not supported.\"),\n  expected: jsonSchema.refine(val => val !== null && val !== undefined, { message: \"Expected value cannot be null or undefined.\" }).describe(\"The expected output for the test case. It MUST NOT be null or undefined.\"),\n});\n\nconst ProblemSchema: z.ZodType<Problem> = z.object({\n  id: z.string().describe('A unique identifier for the problem, in kebab-case. e.g., \"two-sum\"'),\n  title: z.string().describe('The title of the coding problem.'),\n  description: z.string().describe('A detailed description of the problem. Use newlines (`\\\\n`) for formatting. Do not use Markdown characters like `#` or `*`.'),\n  examples: z.array(z.object({\n    input: z.string().describe('A human-readable string representing an example input for the problem.'),\n    output: z.string().describe('The corresponding human-readable output for the example input.'),\n    explanation: z.string().optional().describe('An optional explanation of the example.'),\n  })).min(3).describe('An array of at least 3 clear examples with human-readable inputs, outputs, and optional explanations.'),\n  starterCode: z.string().describe('Boilerplate code in JavaScript for the user to start with, as a standard function declaration. e.g., \"function twoSum(nums, target) { ... }\"'),\n  solution: z.string().describe('A correct and optimal solution in JavaScript.'),\n  testCases: z.array(TestCaseSchema).min(5).describe(\"An array of at least 5 test cases to verify the solution. The 'input' field should be an array of arguments for the function.\"),\n  entryPoint: z.string().describe(\"The name of the function to be tested, e.g., 'twoSum'.\"),\n});\nexport type { Problem };\n\nconst GenerateProblemInputSchema = z.object({\n  topic: z.string().describe('The topic for the coding problem, e.g., \"Arrays & Hashing\", \"Dynamic Programming\".'),\n  difficulty: z.enum(['easy', 'medium', 'hard']).default('medium').optional().describe('The difficulty level of the problem.'),\n  seed: z.string().optional().describe('A random string to ensure the problem is unique and not from a cache.'),\n});\nexport type GenerateProblemInput = z.infer<typeof GenerateProblemInputSchema>;\n\n\nexport async function generateProblem(input: GenerateProblemInput): Promise<Problem> {\n  return generateProblemFlow(input);\n}\n\nconst generateProblemPrompt = ai.definePrompt({\n  name: 'generateProblemPrompt',\n  input: { schema: GenerateProblemInputSchema },\n  output: { schema: ProblemSchema },\n  prompt: `You are an expert programming challenge creator for a platform called CodeClash. Your task is to generate a unique, LeetCode-style problem based on a given topic.\n\nThe problem should be self-contained, clearly explained, and engaging. The difficulty should match the requested level (defaulting to medium if not specified). The problem, examples, and test cases should be solvable in JavaScript.\n\n**CRITICAL INSTRUCTIONS - FOLLOW THESE EXACTLY:**\n1.  **Output Format:** You MUST return a single JSON object that strictly adheres to the provided schema. ALL fields (\\`id\\`, \\`title\\`, \\`description\\`, \\`examples\\`, \\`starterCode\\`, \\`solution\\`, \\`testCases\\`, \\`entryPoint\\`) are mandatory.\n\n2.  **Problem Description Quality:**\n    *   Write clear, concise problem statements with proper formatting.\n    *   Include constraints like input size limits and value ranges.\n    *   Break down complex problems into steps or parts.\n    *   Use consistent terminology throughout the description.\n    *   Include time and space complexity expectations for optimal solutions.\n\n3.  **Examples Quality:**\n    *   Provide at least 3 examples with increasing complexity.\n    *   Include edge cases in your examples.\n    *   For each example, give a clear explanation of the step-by-step solution process.\n    *   Make sure examples are diverse and cover different scenarios.\n\n4.  **Test Case Validity is PARAMOUNT:**\n    *   You MUST provide at least 8 complete test cases.\n    *   Include a mix of simple cases, edge cases, and complex scenarios.\n    *   For **EVERY SINGLE TEST CASE**, the \\`expected\\` field MUST have a valid, concrete value.\n    *   The \\`expected\\` field **CANNOT BE \\`null\\`**.\n    *   The \\`expected\\` field **CANNOT BE \\`undefined\\`**.\n    *   If the correct output is an empty array, the \\`expected\\` value must be \\`[]\\`.\n    *   If the correct output is an empty string, the \\`expected\\` value must be \\`\"\"\\`.\n    *   If the correct output is \\`0\\`, the \\`expected\\` value must be \\`0\\`.\n    *   **There are no exceptions. The \\`expected\\` field must always be populated with a real value.**\n\n5.  **CRITICAL \\`testCases.input\\` FORMATTING:**\n    *   The \\`input\\` field for each test case MUST be an array of arguments.\n    *   The values within this array MUST be pure, valid JSON types (strings, numbers, booleans, nulls, and arrays). Objects are NOT supported.\n    *   **DO NOT** represent arrays or numbers as strings within the JSON.\n    *   **CORRECT:** \\`\"input\": [[1, 2, 3], 4]\\`\n    *   **INCORRECT:** \\`\"input\": [\"[1, 2, 3]\", 4]\\`\n    *   **INCORRECT:** \\`\"input\": [\"[1, 2, 3]\", \"4\"]\\`\n    *   **INCORRECT:** \\`\"input\": \"[[1,2,3], 4]\"\\` (The entire value should not be a string)\n    *   For a function \\`twoSum(nums, target)\\` a CORRECT \\`input\\` is \\`[[2, 7, 11, 15], 9]\\`.\n    *   For a function \\`rotate(nums, k)\\` a CORRECT \\`input\\` is \\`[[1,2,3,4,5], 2]\\`.\n\n6.  **Starter Code Quality:**\n    *   Provide meaningful variable names and basic structure.\n    *   Include helpful comments explaining the function parameters and expected return value.\n    *   Do not include solution hints in the starter code.\n\n7.  **Solution Quality:**\n    *   Provide an optimal, well-commented solution.\n    *   Include time and space complexity analysis in comments.\n    *   Use clear variable names and follow best practices.\n\n8.  **No Comments:** The final JSON output must NOT contain any comments.\n\n**Topic:** {{{topic}}}\n**Difficulty:** {{{difficulty}}}\n**Unique Request Seed:** {{{seed}}}\n\nGenerate a problem with all the required fields, paying special attention to the format and validity of the \\`testCases\\`. Double-check your work to ensure \\`expected\\` is never null or undefined and that all input values are pure JSON types.`,\n});\n\nconst generateProblemFlow = ai.defineFlow(\n  {\n    name: 'generateProblemFlow',\n    inputSchema: GenerateProblemInputSchema,\n    outputSchema: ProblemSchema,\n  },\n  async (input) => {\n    const { output } = await generateProblemPrompt(input);\n    if (!output) {\n      throw new Error('Failed to generate a problem from the AI model.');\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAmDsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/components/UserVideo.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport { CameraOff, Loader2 } from 'lucide-react';\n\nexport function UserVideo() {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const { toast } = useToast();\n  const [permissionState, setPermissionState] = useState<'loading' | 'granted' | 'denied' | 'unsupported'>('loading');\n\n  useEffect(() => {\n    let stream: MediaStream | null = null;\n    \n    const getCamera = async () => {\n      try {\n        // Check if we're in a secure context (HTTPS or localhost)\n        if (!window.isSecureContext) {\n          console.error(\"Camera API requires a secure context (HTTPS or localhost).\");\n          setPermissionState('unsupported');\n          return;\n        }\n        \n        // Check if navigator.mediaDevices exists before trying to access it\n        if (!navigator.mediaDevices) {\n          console.error(\"Camera API not supported by this browser.\");\n          setPermissionState('unsupported');\n          // Don't show toast for unsupported browsers to avoid disrupting the user experience\n          return;\n        }\n        \n        try {\n          stream = await navigator.mediaDevices.getUserMedia({ video: true });\n          setPermissionState('granted');\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (err) {\n          console.error(\"Error accessing camera:\", err);\n          setPermissionState('denied');\n          toast({\n            variant: \"destructive\",\n            title: \"Camera Access Denied\",\n            description: \"Please enable camera permissions in your browser settings to use this feature.\",\n          });\n        }\n      } catch (error) {\n        // Catch any unexpected errors during camera initialization\n        console.error(\"Unexpected error during camera initialization:\", error);\n        setPermissionState('unsupported');\n      }\n    };\n\n    getCamera();\n\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [toast]);\n\n  return (\n    <div className=\"relative aspect-video w-full bg-muted/30 rounded-lg flex items-center justify-center overflow-hidden\">\n      <video\n        ref={videoRef}\n        className=\"w-full h-full object-cover\"\n        autoPlay\n        playsInline\n        muted\n      />\n      {permissionState === 'loading' && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center text-muted-foreground p-2 bg-background/50\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n          <p className=\"text-xs\">Starting camera...</p>\n        </div>\n      )}\n      {(permissionState === 'denied' || permissionState === 'unsupported') && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center text-muted-foreground p-2 bg-background/50\">\n          <CameraOff className=\"h-8 w-8 mx-auto mb-2\" />\n          <p className=\"text-xs\">\n            {permissionState === 'denied' \n              ? 'Camera is off or permission denied' \n              : 'Camera not supported in this browser'}\n          </p>\n        </div>\n      )}\n      <div className=\"absolute bottom-1 left-2 text-xs bg-black/50 text-white px-1.5 py-0.5 rounded\">You</div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoD;IAEzG,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,SAA6B;YAEjC,MAAM;iDAAY;oBAChB,IAAI;wBACF,0DAA0D;wBAC1D,IAAI,CAAC,OAAO,eAAe,EAAE;4BAC3B,QAAQ,KAAK,CAAC;4BACd,mBAAmB;4BACnB;wBACF;wBAEA,oEAAoE;wBACpE,IAAI,CAAC,UAAU,YAAY,EAAE;4BAC3B,QAAQ,KAAK,CAAC;4BACd,mBAAmB;4BACnB,oFAAoF;4BACpF;wBACF;wBAEA,IAAI;4BACF,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gCAAE,OAAO;4BAAK;4BACjE,mBAAmB;4BACnB,IAAI,SAAS,OAAO,EAAE;gCACpB,SAAS,OAAO,CAAC,SAAS,GAAG;4BAC/B;wBACF,EAAE,OAAO,KAAK;4BACZ,QAAQ,KAAK,CAAC,2BAA2B;4BACzC,mBAAmB;4BACnB,MAAM;gCACJ,SAAS;gCACT,OAAO;gCACP,aAAa;4BACf;wBACF;oBACF,EAAE,OAAO,OAAO;wBACd,2DAA2D;wBAC3D,QAAQ,KAAK,CAAC,kDAAkD;wBAChE,mBAAmB;oBACrB;gBACF;;YAEA;YAEA;uCAAO;oBACL,IAAI,QAAQ;wBACV,OAAO,SAAS,GAAG,OAAO;mDAAC,CAAA,QAAS,MAAM,IAAI;;oBAChD;gBACF;;QACF;8BAAG;QAAC;KAAM;IAEV,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,KAAK;gBACL,WAAU;gBACV,QAAQ;gBACR,WAAW;gBACX,KAAK;;;;;;YAEN,oBAAoB,2BACnB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,oNAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;kCACnB,6LAAC;wBAAE,WAAU;kCAAU;;;;;;;;;;;;YAG1B,CAAC,oBAAoB,YAAY,oBAAoB,aAAa,mBACjE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;kCACrB,6LAAC;wBAAE,WAAU;kCACV,oBAAoB,WACjB,uCACA;;;;;;;;;;;;0BAIV,6LAAC;gBAAI,WAAU;0BAAgF;;;;;;;;;;;;AAGrG;GApFgB;;QAEI,+HAAA,CAAA,WAAQ;;;KAFZ","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/components/AuthGuard.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '@/hooks/useAuth';\nimport { ensureUserProfile } from '@/lib/user';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\n\nexport default function AuthGuard({ children }: { children: React.ReactNode }) {\n  const { user, loading, isDbConnected, checkDbConnection } = useAuth();\n  const router = useRouter();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (loading) {\n      return; \n    }\n\n    if (!user) {\n      router.push('/login');\n      return;\n    }\n    \n    if (isDbConnected === null) { // only check if not already checked\n        checkDbConnection();\n    }\n    \n  }, [user, loading, router, isDbConnected, checkDbConnection]);\n\n  useEffect(() => {\n    if (isDbConnected === false) { // explicit check for false\n      router.push('/setup-error');\n    }\n  }, [isDbConnected, router]);\n\n  if (loading || !user || isDbConnected !== true) {\n    return (\n      <div className=\"flex h-dvh items-center justify-center bg-background\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n        <p className=\"ml-4\">Authenticating...</p>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAEA;AACA;;;AAPA;;;;;;AASe,SAAS,UAAU,EAAE,QAAQ,EAAiC;;IAC3E,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAClE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,SAAS;gBACX;YACF;YAEA,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,IAAI,kBAAkB,MAAM;gBACxB;YACJ;QAEF;8BAAG;QAAC;QAAM;QAAS;QAAQ;QAAe;KAAkB;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,kBAAkB,OAAO;gBAC3B,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAe;KAAO;IAE1B,IAAI,WAAW,CAAC,QAAQ,kBAAkB,MAAM;QAC9C,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,oNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,6LAAC;oBAAE,WAAU;8BAAO;;;;;;;;;;;;IAG1B;IAEA,qBAAO;kBAAG;;AACZ;GArCwB;;QACsC,2HAAA,CAAA,UAAO;QACpD,qIAAA,CAAA,YAAS;QACN,+HAAA,CAAA,WAAQ;;;KAHJ","debugId":null}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/app/matching/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { collection, addDoc, serverTimestamp as firestoreServerTimestamp } from 'firebase/firestore';\nimport { useToast } from '@/hooks/use-toast';\nimport { Header } from '@/components/Header';\nimport { db, rtdb, isConfigured } from '@/lib/firebase';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Loader2 } from 'lucide-react';\nimport { generateProblem, type Problem } from '@/ai/flows/generateProblemFlow';\nimport { UserVideo } from '@/components/UserVideo';\nimport AuthGuard from '@/components/AuthGuard';\nimport { useAuth } from '@/hooks/useAuth';\nimport { FirebaseError } from 'firebase/app';\nimport { ref, onValue, set, get, remove, update, onDisconnect, off, serverTimestamp, type DatabaseReference } from 'firebase/database';\nimport { doc, getDoc } from 'firebase/firestore';\nimport Link from 'next/link';\n\n\nfunction MatchingContent() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { user: currentUser } = useAuth();\n\n  const [statusText, setStatusText] = useState('Initializing...');\n  const matchmakingActive = useRef(false);\n  const myQueueRef = useRef<DatabaseReference | null>(null);\n  const [waitingTime, setWaitingTime] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [matchmakingStatus, setMatchmakingStatus] = useState<'initializing' | 'waiting' | 'found' | 'error'>('initializing');\n  const [debugInfo, setDebugInfo] = useState<{queueSize?: number, myEntry?: any, error?: string}>({});\n  const [isCreatingTestMatch, setIsCreatingTestMatch] = useState(false);\n  const [runningDiagnostics, setRunningDiagnostics] = useState(false);\n  const [diagnosticsResults, setDiagnosticsResults] = useState<Array<{\n    test: string;\n    status: 'pass' | 'fail' | 'warning' | 'running';\n    message: string;\n    details?: string;\n  }>>([]);\n  const [showSetupGuide, setShowSetupGuide] = useState(false);\n\n  const cleanup = () => {\n    if (myQueueRef.current) {\n        console.log('Cleaning up matchmaking reference:', myQueueRef.current.key);\n        onDisconnect(myQueueRef.current).cancel(); // Important: cancel the onDisconnect listener\n        off(myQueueRef.current); // Detach listener\n        remove(myQueueRef.current).catch(err => console.warn('Failed to remove queue entry:', err));\n        myQueueRef.current = null;\n    }\n  };\n  \n  const handleCancel = () => {\n    cleanup();\n    router.push('/lobby');\n  };\n\n  // Add a function to check if Firebase is configured correctly\n  const checkFirebaseSetup = () => {\n    // Basic check if Firebase config is complete\n    const hasFirebaseConfig = isConfigured;\n    // Check if RTDB URL specifically is set since it's critical for matchmaking\n    const hasRTDB = !!process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL;\n    \n    return {\n      isComplete: hasFirebaseConfig,\n      hasRTDB,\n    };\n  };\n  \n  const firebaseCheck = checkFirebaseSetup();\n  \n  useEffect(() => {\n    // If Firebase is not configured properly, show a prominent notification\n    if (!firebaseCheck.isComplete || !firebaseCheck.hasRTDB) {\n      toast({\n        title: \"Firebase Configuration Issue\",\n        description: \"Your Firebase setup appears to be incomplete. Use the diagnostics tool to troubleshoot.\",\n        variant: \"destructive\",\n        duration: 10000,\n      });\n    }\n  }, [firebaseCheck, toast]);\n\n  useEffect(() => {\n    if (matchmakingActive.current || !db || !rtdb || !currentUser) {\n      return;\n    }\n\n    const topicId = searchParams.get('topic');\n\n    if(!topicId) {\n      toast({ title: \"No Topic Selected\", description: \"Please select a topic from the lobby.\", variant: \"destructive\" });\n      router.push('/lobby');\n      return;\n    }\n    \n    // Real-time matchmaking only - bot matching functionality removed\n    \n    const startRealtimeMatchmaking = async () => {\n      const topicId = searchParams.get('topic');\n      setMatchmakingStatus('initializing');\n      \n      if (!topicId) {\n        toast({ title: \"No Topic Selected\", description: \"Please select a topic from the lobby.\", variant: \"destructive\" });\n        router.push('/lobby');\n        return;\n      }\n      \n      try {\n        // First check if queue exists and how many users are in it\n        const queueRef = ref(rtdb, `matchmaking/${topicId}`);\n        const snapshot = await get(queueRef);\n        if (matchmakingActive.current) return;\n\n        const queueData = snapshot.val() || {};\n        const queueSize = Object.keys(queueData).length;\n        setDebugInfo(prev => ({ ...prev, queueSize }));\n        \n        console.log(`Queue for ${topicId} has ${queueSize} users`);\n        \n        // Check if we were already in the queue (e.g., after a refresh)\n        if (queueData[currentUser.uid]) {\n          console.log('Found myself in the queue already, removing old entry');\n          await remove(ref(rtdb, `matchmaking/${topicId}/${currentUser.uid}`));\n        }\n\n        // Find potential opponents who are actively waiting in this topic\n        const opponents = snapshot.exists()\n          ? Object.entries(queueData)\n              .filter(([uid, userData]) => {\n                // Filter out myself and test users\n                if (uid === currentUser.uid || uid.startsWith('test_')) return false;\n                \n                // Check if the user has a clashId (already matched)\n                const userData_typed = userData as any;\n                if (userData_typed.clashId) return false;\n                \n                // Check if the user's timestamp is recent (within last 2 minutes)\n                const timestamp = userData_typed.timestamp;\n                if (timestamp) {\n                  const twoMinutesAgo = Date.now() - 2 * 60 * 1000;\n                  return timestamp > twoMinutesAgo;\n                }\n                \n                return true;\n              })\n              // Sort by timestamp (oldest first) to ensure fair matching\n              .sort((a, b) => {\n                const aData = a[1] as any;\n                const bData = b[1] as any;\n                return (aData.timestamp || 0) - (bData.timestamp || 0);\n              })\n          : [];\n\n        if (opponents.length > 0) {\n          // --- I AM THE MATCHER ---\n          matchmakingActive.current = true;\n          setMatchmakingStatus('found');\n          const [opponentId, opponentData] = opponents[0];\n\n          // Remove the opponent from the queue immediately to prevent others from matching with them\n          await remove(ref(rtdb, `matchmaking/${topicId}/${opponentId}`));\n\n          const createMatchWithRetry = async (retryCount = 0) => {\n            if (retryCount > 0) {\n              setStatusText(`Problem generation is taking a while. Retrying... (${retryCount}/3)`);\n            } else {\n              setStatusText('Opponent found! Generating challenge...');\n            }\n\n            if (retryCount > 3) {\n              toast({ title: \"Failed to Create Match\", description: \"The AI model seems to be unavailable right now. Please try again later.\", variant: \"destructive\" });\n              // Clean up opponent's queue entry so they don't get stuck waiting\n              remove(ref(rtdb, `matchmaking/${topicId}/${opponentId}`));\n              router.push('/lobby');\n              return;\n            }\n\n            try {\n              const topicName = topicId.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n              const problem = await generateProblem({ topic: topicName, seed: Date.now().toString() });\n\n              if (!problem || !problem.testCases || problem.testCases.some(tc => tc.expected === undefined || tc.expected === null) || problem.testCases.length < 5) {\n                console.error(\"AI returned invalid problem object, retrying...\");\n                setTimeout(() => createMatchWithRetry(retryCount + 1), 2000);\n                return;\n              }\n              \n              // Ensure all participant fields are defined to prevent Firebase errors\n              const currentUserName = currentUser.displayName || `User_${currentUser.uid.substring(0, 6)}`;\n              const currentUserAvatar = currentUser.photoURL || `https://api.dicebear.com/8.x/initials/svg?seed=${encodeURIComponent(currentUserName)}`;\n              \n              const opponentData_typed = opponentData as any;\n              const opponentName = opponentData_typed.userName || `User_${opponentId.substring(0, 6)}`;\n              const opponentAvatar = opponentData_typed.userAvatar || `https://api.dicebear.com/8.x/initials/svg?seed=${encodeURIComponent(opponentName)}`;\n\n              const clashDocRef = await addDoc(collection(db, 'clashes'), {\n                topicId,\n                problem: JSON.stringify(problem),\n                participants: [\n                  { userId: currentUser.uid, userName: currentUserName, userAvatar: currentUserAvatar, score: 0, solvedTimestamp: null, ready: false },\n                  { userId: opponentId, userName: opponentName, userAvatar: opponentAvatar, score: 0, solvedTimestamp: null, ready: false }\n                ],\n                createdAt: firestoreServerTimestamp(),\n                status: 'pending'\n              });\n\n              // Notify the opponent and redirect them\n              await update(ref(rtdb, `matchmaking/${topicId}/${opponentId}`), { clashId: clashDocRef.id });\n              \n              // Clean up my own queue entry if it exists\n              if (myQueueRef.current) {\n                remove(myQueueRef.current);\n                myQueueRef.current = null;\n              }\n\n              // Update user statuses in the online status database\n              const myStatusRef = ref(rtdb, `status/${currentUser.uid}`);\n              await update(myStatusRef, { status: 'in-match' });\n              \n              const opponentStatusRef = ref(rtdb, `status/${opponentId}`);\n              await update(opponentStatusRef, { status: 'in-match' });\n\n              toast({ title: \"Match Found!\", description: \"Let's go!\" });\n              router.push(`/clash/${clashDocRef.id}`);\n\n            } catch (error: any) {\n              console.error(`Failed to create match (attempt ${retryCount + 1}):`, error);\n              if (error instanceof FirebaseError && error.code === 'permission-denied') {\n                  router.push('/setup-error');\n              } else {\n                  setTimeout(() => createMatchWithRetry(retryCount + 1), 2000);\n              }\n            }\n          };\n\n          createMatchWithRetry();\n\n        } else {\n          // --- I AM THE WAITER ---\n          setStatusText('Waiting for an opponent...');\n          setMatchmakingStatus('waiting');\n          \n          // Start timer for waiting\n          const waitingStartTime = Date.now();\n          const timerInterval = setInterval(() => {\n            const secondsWaiting = Math.floor((Date.now() - waitingStartTime) / 1000);\n            setWaitingTime(secondsWaiting);\n            \n            // After waiting 3 minutes, suggest refreshing\n            if (secondsWaiting >= 180 && secondsWaiting % 30 === 0) { // Every 30 seconds after 3 minutes\n              toast({\n                title: \"Still waiting...\",\n                description: \"You might want to try refreshing or choosing a different topic.\",\n                variant: \"default\"\n              });\n            }\n          }, 1000);\n          \n          const myRef = ref(rtdb, `matchmaking/${topicId}/${currentUser.uid}`);\n          myQueueRef.current = myRef;\n\n          const myData = {\n            userName: currentUser.displayName || `User_${currentUser.uid.substring(0, 6)}`,\n            userAvatar: currentUser.photoURL || `https://api.dicebear.com/8.x/initials/svg?seed=${encodeURIComponent(currentUser.displayName || currentUser.uid)}`,\n            timestamp: Date.now(),  // Add timestamp for sorting\n            topicId: topicId, // Explicitly store the topic ID to make matching more reliable\n          };\n\n          console.log('Adding myself to queue with data:', myData);\n          setDebugInfo(prev => ({ ...prev, myEntry: myData }));\n          \n          // Set up removal on disconnect\n          onDisconnect(myRef).remove();\n          \n          // Add myself to the queue\n          await set(myRef, myData);\n\n          // Update my status in the online status database\n          const myStatusRef = ref(rtdb, `status/${currentUser.uid}`);\n          await update(myStatusRef, { status: 'waiting' });\n\n          // Set a timeout to notify the user if no opponents are found\n          const notificationTimeouts = [\n            setTimeout(() => {\n              if (!matchmakingActive.current) {\n                setStatusText('Still waiting for an opponent...');\n                toast({\n                  title: \"No opponents found yet\",\n                  description: \"You can continue waiting or cancel to try again later.\",\n                  variant: \"default\"\n                });\n              }\n            }, 60000), // 60 seconds\n            \n            setTimeout(() => {\n              if (!matchmakingActive.current) {\n                setStatusText('Waiting is taking longer than expected. You may want to try a different topic.');\n                toast({\n                  title: \"Long wait time\",\n                  description: \"Consider trying a different topic or time of day when more users are active.\",\n                  variant: \"default\"\n                });\n              }\n            }, 180000) // 3 minutes\n          ];\n\n          // Check queue size periodically to ensure our entry is still there\n          const queueCheckInterval = setInterval(async () => {\n            try {\n              const latestSnapshot = await get(queueRef);\n              const latestData = latestSnapshot.val() || {};\n              const latestSize = Object.keys(latestData).length;\n              setDebugInfo(prev => ({ ...prev, queueSize: latestSize }));\n              \n              // Check if I'm still in the queue\n              if (!latestData[currentUser.uid] && !matchmakingActive.current) {\n                console.log(\"My entry disappeared from queue! Re-adding myself\");\n                await set(myRef, { ...myData, timestamp: Date.now() });\n                \n                toast({\n                  title: \"Connection restored\",\n                  description: \"Your matchmaking entry was restored after a connection issue.\",\n                  variant: \"default\"\n                });\n              }\n              \n              // Check if there are any new opponents to match with\n              const newOpponents = Object.entries(latestData)\n                .filter(([uid, userData]) => {\n                  // Filter out myself and test users\n                  if (uid === currentUser.uid || uid.startsWith('test_')) return false;\n                  \n                  // Check if the user has a clashId (already matched)\n                  const userData_typed = userData as any;\n                  if (userData_typed.clashId) return false;\n                  \n                  // Check if the user's timestamp is recent (within last 2 minutes)\n                  const timestamp = userData_typed.timestamp;\n                  if (timestamp) {\n                    const twoMinutesAgo = Date.now() - 2 * 60 * 1000;\n                    return timestamp > twoMinutesAgo;\n                  }\n                  \n                  return true;\n                })\n                .sort((a, b) => {\n                  const aData = a[1] as any;\n                  const bData = b[1] as any;\n                  return (aData.timestamp || 0) - (bData.timestamp || 0);\n                });\n              \n              // If there are new opponents and I'm the oldest in the queue (or second oldest),\n              // initiate the match creation process\n              if (newOpponents.length > 0) {\n                const myTimestamp = myData.timestamp;\n                const oldestOpponentTimestamp = (newOpponents[0][1] as any).timestamp || 0;\n                \n                // If I've been waiting longer than the oldest opponent, I should create the match\n                if (myTimestamp < oldestOpponentTimestamp) {\n                  console.log(\"I've been waiting longer than the oldest opponent, initiating match creation\");\n                  cleanup(); // Clean up my queue entry and listeners\n                  \n                  // Re-run the matchmaking process to create the match\n                  startRealtimeMatchmaking();\n                }\n              }\n            } catch (e) {\n              console.warn(\"Failed to check queue status:\", e);\n            }\n          }, 10000); // Every 10 seconds\n          \n          // Listen for match notification\n          onValue(myRef, (snap) => {\n            if (matchmakingActive.current) return;\n            \n            const data = snap.val();\n            console.log('My queue entry updated:', data);\n            setDebugInfo(prev => ({ ...prev, myEntry: data }));\n            \n            if (data && data.clashId) {\n              matchmakingActive.current = true;\n              setMatchmakingStatus('found');\n              \n              // Clean up timers and listeners\n              clearInterval(timerInterval);\n              clearInterval(queueCheckInterval);\n              notificationTimeouts.forEach(clearTimeout);\n              \n              // Update my status\n              const myStatusRef = ref(rtdb, `status/${currentUser.uid}`);\n              update(myStatusRef, { status: 'in-match' });\n              \n              toast({ title: \"Match Found!\", description: \"Let's go!\" });\n              router.push(`/clash/${data.clashId}`);\n            }\n          });\n\n          // Clean up function for component unmount\n          return () => {\n            clearInterval(timerInterval);\n            clearInterval(queueCheckInterval);\n            notificationTimeouts.forEach(clearTimeout);\n            \n            // Reset my status when leaving matchmaking\n            const myStatusRef = ref(rtdb, `status/${currentUser.uid}`);\n            update(myStatusRef, { status: 'available' });\n          };\n        }\n      } catch (error) {\n        console.error(\"Matchmaking failed\", error);\n        setMatchmakingStatus('error');\n        setDebugInfo(prev => ({ ...prev, error: String(error) }));\n        toast({ title: \"Matchmaking Error\", description: \"An unexpected error occurred. Please try again.\", variant: 'destructive' });\n        router.push('/lobby');\n      }\n    };\n    \n    // All topics now use real-time matching\n    startRealtimeMatchmaking();\n\n    return () => {\n      cleanup();\n    };\n\n  }, [currentUser, router, searchParams, toast, db, rtdb]);\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Add a function to create a test match with a simulated opponent\n  const createTestMatch = async () => {\n    if (!currentUser || !rtdb || !db) {\n      toast({\n        title: \"Error\",\n        description: \"You must be logged in and Firebase must be configured to create a test match.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsCreatingTestMatch(true);\n\n    try {\n      const topicId = searchParams.get('topic');\n      if (!topicId) {\n        throw new Error(\"No topic selected\");\n      }\n\n      // Generate a unique ID for the test opponent\n      const testOpponentId = `test_${Date.now()}`;\n      \n      // Create a clash document\n      const topicName = topicId.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      const problem = await generateProblem({ topic: topicName, seed: Date.now().toString() });\n\n      if (!problem || !problem.testCases || problem.testCases.length < 5) {\n        throw new Error(\"Failed to generate a valid problem\");\n      }\n\n      // Create the clash with both participants\n      const clashesRef = collection(db, 'clashes');\n      const clashDocRef = await addDoc(clashesRef, {\n        topicId,\n        problem: JSON.stringify(problem),\n        participants: [\n          { \n            userId: currentUser.uid, \n            userName: currentUser.displayName || 'You', \n            userAvatar: currentUser.photoURL || `https://api.dicebear.com/8.x/initials/svg?seed=${encodeURIComponent(currentUser.displayName || 'You')}`, \n            score: 0, \n            solvedTimestamp: null, \n            ready: false \n          },\n          { \n            userId: testOpponentId, \n            userName: 'Test Opponent', \n            userAvatar: `https://api.dicebear.com/8.x/bottts/svg?seed=${testOpponentId}`, \n            score: 0, \n            solvedTimestamp: null, \n            ready: false,\n            isTestUser: true\n          }\n        ],\n        createdAt: firestoreServerTimestamp(),\n        status: 'pending',\n        isTestMatch: true\n      });\n\n      // Also create an entry in the realtime database for the clash\n      await set(ref(rtdb, `clashes/${clashDocRef.id}`), {\n        createdAt: serverTimestamp(),\n        status: 'waiting',\n        topic: topicId,\n        createdBy: currentUser.uid,\n        participants: {\n          [currentUser.uid]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName || 'You',\n            photoURL: currentUser.photoURL,\n            ready: true,\n            joinedAt: serverTimestamp()\n          },\n          [testOpponentId]: {\n            uid: testOpponentId,\n            displayName: 'Test Opponent',\n            photoURL: `https://api.dicebear.com/8.x/bottts/svg?seed=${testOpponentId}`,\n            ready: false,\n            joinedAt: null,\n            isTestUser: true\n          }\n        },\n        isTestMatch: true\n      });\n\n      // Clean up any queue entries\n      if (myQueueRef.current) {\n        remove(myQueueRef.current);\n        myQueueRef.current = null;\n      }\n\n      toast({ title: \"Test Match Created\", description: \"Starting test match with simulated opponent\" });\n      router.push(`/clash/${clashDocRef.id}`);\n    } catch (error) {\n      console.error(\"Failed to create test match:\", error);\n      toast({\n        title: \"Failed to Create Test Match\",\n        description: \"There was an error creating the test match. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsCreatingTestMatch(false);\n    }\n  };\n\n  // Add a function to diagnose Firebase and matchmaking issues\n  const runDiagnostics = async () => {\n    if (runningDiagnostics) return;\n    setRunningDiagnostics(true);\n    \n    const updateResults = (index: number, result: { \n      status: 'pass' | 'fail' | 'warning' | 'running';\n      message: string;\n      details?: string;\n    }) => {\n      setDiagnosticsResults(prev => {\n        const newResults = [...prev];\n        newResults[index] = { ...newResults[index], ...result };\n        return newResults;\n      });\n    };\n\n    // Reset diagnostics results\n    setDiagnosticsResults([\n      { test: \"Firebase Configuration\", status: \"running\", message: \"Checking Firebase configuration...\" },\n      { test: \"Authentication\", status: \"running\", message: \"Checking authentication status...\" },\n      { test: \"Firestore Database\", status: \"running\", message: \"Testing Firestore connection...\" },\n      { test: \"Realtime Database\", status: \"running\", message: \"Testing Realtime Database connection...\" },\n      { test: \"Matchmaking Queue\", status: \"running\", message: \"Testing matchmaking queue operations...\" },\n      { test: \"Topic Selection\", status: \"running\", message: \"Checking topic parameter...\" },\n    ]);\n\n    // 1. Check Firebase Configuration\n    try {\n      if (!isConfigured) {\n        updateResults(0, { \n          status: 'fail', \n          message: 'Firebase is not properly configured',\n          details: 'Missing environment variables. Please check your .env.local file.'\n        });\n      } else {\n        updateResults(0, { status: 'pass', message: 'Firebase configuration found' });\n      }\n    } catch (error) {\n      updateResults(0, { \n        status: 'fail', \n        message: 'Error checking Firebase configuration',\n        details: String(error)\n      });\n    }\n\n    // 2. Check Authentication\n    try {\n      if (!currentUser) {\n        updateResults(1, { \n          status: 'fail', \n          message: 'User is not authenticated',\n          details: 'You need to be logged in to use matchmaking'\n        });\n      } else {\n        updateResults(1, { \n          status: 'pass', \n          message: `Authenticated as ${currentUser.displayName || currentUser.email || currentUser.uid}` \n        });\n      }\n    } catch (error) {\n      updateResults(1, { \n        status: 'fail', \n        message: 'Error checking authentication',\n        details: String(error)\n      });\n    }\n\n    // 3. Check Firestore Database\n    try {\n      if (!db) {\n        updateResults(2, { \n          status: 'fail', \n          message: 'Firestore not initialized',\n          details: 'Check your Firebase configuration'\n        });\n      } else {\n        // Try a simple read operation\n        try {\n          const testDocRef = doc(db, 'test_connection', 'test');\n          await getDoc(testDocRef);\n          updateResults(2, { status: 'pass', message: 'Firestore connection successful' });\n        } catch (error: any) {\n          if (error.code === 'permission-denied') {\n            updateResults(2, { \n              status: 'warning', \n              message: 'Firestore permission denied',\n              details: 'Your security rules may be too restrictive. This is normal for non-existent test documents.'\n            });\n          } else {\n            updateResults(2, { \n              status: 'fail', \n              message: `Firestore error: ${error.code || 'unknown'}`,\n              details: error.message\n            });\n          }\n        }\n      }\n    } catch (error) {\n      updateResults(2, { \n        status: 'fail', \n        message: 'Error testing Firestore',\n        details: String(error)\n      });\n    }\n\n    // 4. Check Realtime Database\n    try {\n      if (!rtdb) {\n        updateResults(3, { \n          status: 'fail', \n          message: 'Realtime Database not initialized',\n          details: 'Check if NEXT_PUBLIC_FIREBASE_DATABASE_URL is set in your .env.local file'\n        });\n      } else {\n        // Try a simple read operation\n        try {\n          const testRef = ref(rtdb, 'test_connection');\n          await get(testRef);\n          updateResults(3, { status: 'pass', message: 'Realtime Database connection successful' });\n        } catch (error: any) {\n          if (error.code === 'PERMISSION_DENIED') {\n            updateResults(3, { \n              status: 'warning', \n              message: 'Realtime DB permission denied',\n              details: 'Your database rules may be too restrictive. Update your rules to allow matchmaking.'\n            });\n          } else {\n            updateResults(3, { \n              status: 'fail', \n              message: `Realtime DB error: ${error.code || 'unknown'}`,\n              details: error.message\n            });\n          }\n        }\n      }\n    } catch (error) {\n      updateResults(3, { \n        status: 'fail', \n        message: 'Error testing Realtime Database',\n        details: String(error)\n      });\n    }\n\n    // 5. Check Matchmaking Queue\n    try {\n      const topicId = searchParams.get('topic');\n      \n      if (!rtdb || !topicId || !currentUser) {\n        updateResults(4, { \n          status: 'fail', \n          message: 'Cannot test matchmaking queue',\n          details: 'Missing required dependencies'\n        });\n      } else {\n        // Check if we can read the matchmaking queue\n        try {\n          const queueRef = ref(rtdb, `matchmaking/${topicId}`);\n          const snapshot = await get(queueRef);\n          \n          // Check if we can write to the queue\n          const testEntryRef = ref(rtdb, `matchmaking/${topicId}/test_${Date.now()}`);\n          await set(testEntryRef, { test: true, timestamp: Date.now() });\n          await remove(testEntryRef);\n          \n          // Count existing entries\n          const queueSize = snapshot.exists() ? Object.keys(snapshot.val()).length : 0;\n          \n          if (queueSize > 0 && queueSize < 100) { // sanity check for queue size\n            updateResults(4, { \n              status: 'pass', \n              message: `Queue is working with ${queueSize} user(s) waiting`,\n              details: 'Other users are in the queue'\n            });\n          } else if (queueSize === 0) {\n            updateResults(4, { \n              status: 'warning', \n              message: 'Queue is empty',\n              details: 'No other users are currently matching for this topic'\n            });\n          } else {\n            updateResults(4, { \n              status: 'warning', \n              message: `Unusual queue size: ${queueSize}`,\n              details: 'This may indicate stale entries in the queue'\n            });\n          }\n        } catch (error: any) {\n          updateResults(4, { \n            status: 'fail', \n            message: `Matchmaking queue error: ${error.code || 'unknown'}`,\n            details: error.message\n          });\n        }\n      }\n    } catch (error) {\n      updateResults(4, { \n        status: 'fail', \n        message: 'Error testing matchmaking queue',\n        details: String(error)\n      });\n    }\n\n    // 6. Check Topic Selection\n    try {\n      const topicId = searchParams.get('topic');\n      if (!topicId) {\n        updateResults(5, { \n          status: 'fail', \n          message: 'No topic selected',\n          details: 'You need to select a topic from the lobby'\n        });\n      } else {\n        updateResults(5, { \n          status: 'pass', \n          message: `Topic selected: ${topicId}`\n        });\n      }\n    } catch (error) {\n      updateResults(5, { \n        status: 'fail', \n        message: 'Error checking topic',\n        details: String(error)\n      });\n    }\n\n    setRunningDiagnostics(false);\n  };\n\n  const showDiagnosticsDialog = diagnosticsResults.length > 0;\n\n  if (!currentUser) {\n    return (\n       <div className=\"flex flex-col min-h-dvh bg-transparent text-foreground font-body\">\n        <Header />\n        <main className=\"flex-1 container mx-auto py-8 px-4 flex flex-col items-center justify-center\">\n            <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </main>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-dvh bg-transparent text-foreground font-body\">\n      <Header />\n      <main className=\"flex-1 container mx-auto py-8 px-4 flex flex-col items-center justify-center\">\n        {/* Show Firebase setup warning if needed */}\n        {(!firebaseCheck.isComplete || !firebaseCheck.hasRTDB) && (\n          <div className=\"w-full max-w-2xl mb-4 rounded-lg border border-red-400 bg-red-100/10 p-4 text-red-400\">\n            <div className=\"flex items-start\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5 mr-2 mt-0.5 flex-shrink-0\">\n                <path d=\"M12 9v4\"></path>\n                <path d=\"M12 17.5v.5\"></path>\n                <path d=\"M5.5 15h13\"></path>\n                <path d=\"M6 20 18 4\"></path>\n              </svg>\n              <div>\n                <h4 className=\"font-bold\">Firebase Not Properly Configured</h4>\n                <p className=\"text-sm mt-1\">Matchmaking requires proper Firebase setup with Realtime Database.</p>\n                <div className=\"mt-2 flex flex-wrap gap-2\">\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\"\n                    onClick={() => setShowSetupGuide(!showSetupGuide)}\n                    className=\"border-red-400 text-red-400 hover:bg-red-400/10\"\n                  >\n                    {showSetupGuide ? \"Hide Setup Guide\" : \"Show Setup Guide\"}\n                  </Button>\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\"\n                    onClick={runDiagnostics}\n                    className=\"border-red-400 text-red-400 hover:bg-red-400/10\"\n                  >\n                    Run Diagnostics\n                  </Button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Setup guide collapsible section */}\n            {showSetupGuide && (\n              <div className=\"mt-4 pt-4 border-t border-red-400/30 text-sm\">\n                <h5 className=\"font-bold mb-2\">Quick Firebase Setup Guide:</h5>\n                <ol className=\"list-decimal list-inside space-y-2 pl-1\">\n                  <li>Create a Firebase project at <a href=\"https://console.firebase.google.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">firebase.google.com</a></li>\n                  <li>Register a Web App to get your config</li>\n                  <li>Enable Authentication (Email/Password)</li>\n                  <li>Create Firestore Database</li>\n                  <li>Create Realtime Database (critical for matchmaking)</li>\n                  <li>Set security rules for both databases</li>\n                  <li>Create <code>.env.local</code> with all Firebase config values</li>\n                  <li>Ensure NEXT_PUBLIC_FIREBASE_DATABASE_URL is set to your Realtime DB URL</li>\n                  <li>Restart your development server</li>\n                </ol>\n                <p className=\"mt-3\">\n                  See our <Link href=\"/docs/firebase-setup\" className=\"underline\">detailed Firebase setup guide</Link> or \n                  check the <Button variant=\"link\" className=\"p-0 h-auto underline\" onClick={() => router.push('/')}>README</Button> for complete instructions.\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        <Card className=\"bg-card/50 backdrop-blur-lg border border-white/10 rounded-2xl shadow-lg w-full max-w-2xl\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-3xl\">Finding Your Opponent</CardTitle>\n            <CardDescription>Please wait while we find another player.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex flex-col items-center gap-6\">\n            <div className=\"aspect-video w-full max-w-md bg-muted/30 rounded-lg flex items-center justify-center overflow-hidden\">\n              <UserVideo />\n            </div>\n\n            <div className=\"flex items-center gap-4 text-lg text-muted-foreground\">\n              {matchmakingStatus === 'waiting' ? (\n                <div className=\"relative flex items-center gap-4\">\n                  <div className=\"h-12 w-12 rounded-full border-4 border-t-primary border-r-transparent border-b-transparent border-l-transparent animate-spin\"></div>\n                  <div>\n                    <p>{statusText}</p>\n                    <p className=\"text-sm text-muted-foreground\">Time elapsed: {formatTime(waitingTime)}</p>\n                  </div>\n                </div>\n              ) : matchmakingStatus === 'found' ? (\n                <div className=\"flex items-center gap-4\">\n                  <Loader2 className=\"h-6 w-6 animate-spin\" />\n                  <p>{statusText}</p>\n                </div>\n              ) : matchmakingStatus === 'error' ? (\n                <div className=\"flex items-center gap-4 text-red-400\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6\">\n                    <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n                    <path d=\"M12 9v4\"></path>\n                    <path d=\"M12 17h.01\"></path>\n                  </svg>\n                  <p>Error in matchmaking</p>\n                </div>\n              ) : (\n                <div className=\"flex items-center gap-4\">\n                  <Loader2 className=\"h-6 w-6 animate-spin\" />\n                  <p>{statusText}</p>\n                </div>\n              )}\n            </div>\n            \n            {waitingTime > 120 && (\n              <div className=\"text-sm text-center max-w-md text-amber-300\">\n                <p>The wait seems longer than usual. You might want to:</p>\n                <ul className=\"list-disc list-inside mt-2 text-left\">\n                  <li>Try a different topic with more active users</li>\n                  <li>Come back at a time when more users are online</li>\n                  <li>Use the test mode to practice by yourself</li>\n                  <li>\n                    <Button \n                      variant=\"link\" \n                      size=\"sm\" \n                      className=\"text-amber-300 p-0 h-auto font-normal underline\"\n                      onClick={runDiagnostics}\n                      disabled={runningDiagnostics}\n                    >\n                      Run diagnostics\n                    </Button>\n                  </li>\n                </ul>\n              </div>\n            )}\n\n            <div className=\"flex flex-col sm:flex-row items-center gap-4 w-full justify-center\">\n              <Button variant=\"outline\" onClick={handleCancel}>Cancel Search</Button>\n              <Button \n                variant=\"default\" \n                onClick={() => {\n                  // First clean up existing queue entry\n                  cleanup();\n                  // Then restart the matchmaking process\n                  setWaitingTime(0);\n                  matchmakingActive.current = false;\n                  // Re-run the effect that does matchmaking\n                  const topicId = searchParams.get('topic');\n                  if (topicId && rtdb && currentUser) {\n                    const queueRef = ref(rtdb, `matchmaking/${topicId}`);\n                    setStatusText('Refreshing matchmaking...');\n                    setMatchmakingStatus('initializing');\n                    // We need to re-run the matchmaking logic from the effect\n                    const runMatchmaking = async () => {\n                      try {\n                        const snapshot = await get(queueRef);\n                        // Continue with the same matchmaking logic as in the effect\n                        // This is a simplified version that just puts the user back in the queue\n                        const myRef = ref(rtdb, `matchmaking/${topicId}/${currentUser.uid}`);\n                        myQueueRef.current = myRef;\n                        onDisconnect(myRef).remove();\n                        await set(myRef, {\n                          userName: currentUser.displayName,\n                          userAvatar: currentUser.photoURL,\n                          timestamp: Date.now()\n                        });\n                        setStatusText('Waiting for an opponent...');\n                        setMatchmakingStatus('waiting');\n                      } catch (error) {\n                        console.error(\"Failed to refresh matchmaking:\", error);\n                        toast({ \n                          title: \"Refresh Failed\", \n                          description: \"Please try going back to the lobby and starting again.\", \n                          variant: \"destructive\" \n                        });\n                      }\n                    };\n                    runMatchmaking();\n                  }\n                }}\n              >\n                Refresh Search\n              </Button>\n              <Button \n                variant=\"outline\" \n                onClick={() => setShowDebugInfo(!showDebugInfo)}\n                size=\"icon\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-4 w-4\">\n                  <path d=\"M12 12m-10 0a10 10 0 1 0 20 0a10 10 0 1 0 -20 0\"></path>\n                  <path d=\"M12 16v-4\"></path>\n                  <path d=\"M12 8h.01\"></path>\n                </svg>\n              </Button>\n              <Button\n                variant={showDebugInfo ? \"default\" : \"outline\"}\n                onClick={runDiagnostics}\n                disabled={runningDiagnostics}\n                className=\"bg-amber-600 hover:bg-amber-700 text-white border-none\"\n                size=\"icon\"\n              >\n                {runningDiagnostics ? (\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-4 w-4\">\n                    <path d=\"M19 11V4a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v7\"></path>\n                    <path d=\"M3 15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2z\"></path>\n                    <path d=\"m10 7 4 4\"></path>\n                    <path d=\"m14 7-4 4\"></path>\n                    <path d=\"M12 22v-2\"></path>\n                    <path d=\"M12 18v-2\"></path>\n                  </svg>\n                )}\n              </Button>\n            </div>\n            \n            {/* Diagnostic results */}\n            {diagnosticsResults.length > 0 && (\n              <div className=\"w-full mt-4 border border-border rounded-md bg-card/50 p-4\">\n                <h3 className=\"font-bold text-lg mb-4 flex items-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5 mr-2\">\n                    <path d=\"M19 11V4a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v7\"></path>\n                    <path d=\"M3 15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2z\"></path>\n                    <path d=\"m10 7 4 4\"></path>\n                    <path d=\"m14 7-4 4\"></path>\n                    <path d=\"M12 22v-2\"></path>\n                    <path d=\"M12 18v-2\"></path>\n                  </svg>\n                  Matchmaking Diagnostics\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  {diagnosticsResults.map((result, index) => (\n                    <div key={index} className=\"flex items-start gap-3\">\n                      {result.status === 'pass' && (\n                        <div className=\"h-5 w-5 mt-0.5 rounded-full bg-green-500/20 text-green-500 flex items-center justify-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path d=\"M20 6 9 17l-5-5\"></path>\n                          </svg>\n                        </div>\n                      )}\n                      {result.status === 'fail' && (\n                        <div className=\"h-5 w-5 mt-0.5 rounded-full bg-red-500/20 text-red-500 flex items-center justify-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path d=\"M18 6 6 18\"></path>\n                            <path d=\"m6 6 12 12\"></path>\n                          </svg>\n                        </div>\n                      )}\n                      {result.status === 'warning' && (\n                        <div className=\"h-5 w-5 mt-0.5 rounded-full bg-yellow-500/20 text-yellow-500 flex items-center justify-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path d=\"M12 9v4\"></path>\n                            <path d=\"M12 17.5v.5\"></path>\n                            <path d=\"M5.5 15h13\"></path>\n                            <path d=\"M6 20 18 4\"></path>\n                          </svg>\n                        </div>\n                      )}\n                      {result.status === 'running' && (\n                        <div className=\"h-5 w-5 mt-0.5 text-primary\">\n                          <Loader2 className=\"h-5 w-5 animate-spin\" />\n                        </div>\n                      )}\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium\">{result.test}</div>\n                        <div className=\"text-sm text-muted-foreground\">{result.message}</div>\n                        {result.details && (\n                          <div className=\"text-xs text-muted-foreground mt-1 bg-background/50 p-1 rounded\">\n                            {result.details}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                {/* Add recommendations */}\n                {diagnosticsResults.some(r => r.status === 'fail' || r.status === 'warning') && (\n                  <div className=\"mt-6 pt-4 border-t border-border\">\n                    <h4 className=\"font-medium mb-2\">Recommendations:</h4>\n                    <ul className=\"text-sm space-y-2 list-disc list-inside text-muted-foreground\">\n                      {diagnosticsResults.find(r => r.test === \"Firebase Configuration\" && r.status === 'fail') && (\n                        <li>Set up your Firebase environment variables in <code>.env.local</code> file</li>\n                      )}\n                      {diagnosticsResults.find(r => r.test === \"Authentication\" && r.status === 'fail') && (\n                        <li>Sign in again or check if your authentication is working</li>\n                      )}\n                      {diagnosticsResults.find(r => r.test === \"Firestore Database\" && (r.status === 'fail' || r.status === 'warning')) && (\n                        <li>Check your Firestore security rules to allow read/write for clashes collection</li>\n                      )}\n                      {diagnosticsResults.find(r => r.test === \"Realtime Database\" && (r.status === 'fail' || r.status === 'warning')) && (\n                        <li>Make sure your Realtime Database URL is correctly set and rules allow matchmaking</li>\n                      )}\n                      {diagnosticsResults.find(r => r.test === \"Matchmaking Queue\" && r.status === 'warning' && r.message.includes(\"empty\")) && (\n                        <li>There are no other players waiting. Try the test mode or invite a friend to play.</li>\n                      )}\n                      <li>Try clearing your browser cache and cookies</li>\n                      <li>Check your network connection</li>\n                      <li>Try using the test mode for now</li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {/* Add a divider and test match option */}\n            <div className=\"w-full my-4 flex items-center gap-4\">\n              <div className=\"h-px flex-1 bg-border\"></div>\n              <p className=\"text-xs text-muted-foreground\">OR</p>\n              <div className=\"h-px flex-1 bg-border\"></div>\n            </div>\n            \n            <div className=\"w-full\">\n              <Button \n                variant=\"secondary\" \n                className=\"w-full\" \n                onClick={createTestMatch}\n                disabled={isCreatingTestMatch}\n              >\n                {isCreatingTestMatch ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Creating Test Match...\n                  </>\n                ) : (\n                  <>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\">\n                      <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" />\n                      <path d=\"M7 8h.01\" />\n                      <path d=\"M12 8h.01\" />\n                      <path d=\"M17 8h.01\" />\n                      <path d=\"M7 12h.01\" />\n                      <path d=\"M12 12h.01\" />\n                      <path d=\"M17 12h.01\" />\n                      <path d=\"M7 16h.01\" />\n                      <path d=\"M12 16h.01\" />\n                      <path d=\"M17 16h.01\" />\n                    </svg>\n                    Test Mode (Practice Now)\n                  </>\n                )}\n              </Button>\n              <p className=\"text-xs text-center text-muted-foreground mt-2\">\n                Create a test match with a simulated opponent to practice by yourself\n              </p>\n            </div>\n            \n            {showDebugInfo && (\n              <div className=\"w-full text-xs font-mono bg-black/30 p-2 rounded-md text-muted-foreground overflow-auto\">\n                <p>Topic ID: {searchParams.get('topic')}</p>\n                <p>Queue Size: {debugInfo.queueSize ?? 'Unknown'}</p>\n                <p>My UID: {currentUser.uid.substring(0, 8)}...</p>\n                {debugInfo.myEntry && (\n                  <p>My Entry: {JSON.stringify(debugInfo.myEntry)}</p>\n                )}\n                {debugInfo.error && (\n                  <p className=\"text-red-400\">Error: {debugInfo.error}</p>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n\nexport default function MatchingPage() {\n  return (\n    <AuthGuard>\n      <MatchingContent />\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}