{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp, type FirebaseApp } from \"firebase/app\";\nimport { getAuth, type Auth } from \"firebase/auth\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\nimport { getDatabase, type Database } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n};\n\nexport const isConfigured = \n  !!firebaseConfig.apiKey &&\n  !!firebaseConfig.authDomain &&\n  !!firebaseConfig.projectId &&\n  !!firebaseConfig.storageBucket &&\n  !!firebaseConfig.messagingSenderId &&\n  !!firebaseConfig.appId &&\n  !!firebaseConfig.databaseURL;\n\nlet app: FirebaseApp;\nlet auth: Auth;\nlet db: Firestore;\nlet rtdb: Database;\n\nif (isConfigured) {\n    app = getApps().length > 0 ? getApp() : initializeApp(firebaseConfig);\n    auth = getAuth(app);\n    db = getFirestore(app);\n    rtdb = getDatabase(app);\n} else {\n    console.warn(\n        \"Firebase configuration is missing or incomplete. \" +\n        \"Please check your `.env` file and ensure all `NEXT_PUBLIC_FIREBASE_*` variables are set. \" +\n        \"The application will be rendered in a 'configuration needed' state.\"\n    );\n    // Provide dummy objects to prevent crashes server-side\n    app = {} as FirebaseApp;\n    auth = {} as Auth;\n    db = {} as Firestore;\n    rtdb = {} as Database;\n}\n\nexport { app, auth, db, rtdb };\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,WAAW;AACb;AAEO,MAAM,eACX,CAAC,CAAC,eAAe,MAAM,IACvB,CAAC,CAAC,eAAe,UAAU,IAC3B,CAAC,CAAC,eAAe,SAAS,IAC1B,CAAC,CAAC,eAAe,aAAa,IAC9B,CAAC,CAAC,eAAe,iBAAiB,IAClC,CAAC,CAAC,eAAe,KAAK,IACtB,CAAC,CAAC,eAAe,WAAW;AAE9B,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,IAAI,cAAc;IACd,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,IAAI,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;IACtD,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;IACf,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,OAAO,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE;AACvB,OAAO;IACH,QAAQ,IAAI,CACR,sDACA,8FACA;IAEJ,uDAAuD;IACvD,MAAM,CAAC;IACP,OAAO,CAAC;IACR,KAAK,CAAC;IACN,OAAO,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/app/leaderboard/leaderboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LeaderboardClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LeaderboardClient() from the server but LeaderboardClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/leaderboard/leaderboard-client.tsx <module evaluation>\",\n    \"LeaderboardClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,4EACA","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/app/leaderboard/leaderboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LeaderboardClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LeaderboardClient() from the server but LeaderboardClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/leaderboard/leaderboard-client.tsx\",\n    \"LeaderboardClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wDACA","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///D:/CodeClash-main/CodeClash-main/src/app/leaderboard/page.tsx"],"sourcesContent":["\nimport { db } from \"@/lib/firebase\";\nimport { collection, query, orderBy, limit, getDocs } from \"firebase/firestore\";\nimport { LeaderboardClient } from \"./leaderboard-client\";\nimport { cn } from \"@/lib/utils\";\n\ninterface UserScore {\n  id: string;\n  displayName: string;\n  photoURL: string;\n  totalScore: number;\n}\n\nasync function getLeaderboardData(): Promise<UserScore[]> {\n  if (!db) {\n    console.error(\"Database not configured. Leaderboard cannot be fetched.\");\n    return [];\n  }\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, orderBy(\"totalScore\", \"desc\"), limit(100));\n\n  try {\n    const querySnapshot = await getDocs(q);\n    const leaderboard: UserScore[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      leaderboard.push({\n        id: doc.id,\n        displayName: data.displayName || 'Anonymous',\n        photoURL: data.photoURL || 'https://placehold.co/40x40.png',\n        totalScore: data.totalScore || 0,\n      });\n    });\n    return leaderboard;\n  } catch (error: any) {\n    console.error(\"Error fetching leaderboard:\", error);\n    if (error.code === 'permission-denied') {\n        throw new Error(\"PERMISSION_DENIED: Could not fetch leaderboard. Please check your Firebase security rules.\");\n    }\n    throw new Error(\"An unknown error occurred while fetching the leaderboard.\");\n  }\n}\n\nconst RankIcon = ({ rank }: { rank: number }) => {\n  if (rank === 1) return <Crown className=\"h-6 w-6 text-yellow-400\" />;\n  if (rank === 2) return <Medal className=\"h-6 w-6 text-slate-400\" />;\n  if (rank === 3) return <Award className=\"h-6 w-6 text-yellow-600\" />;\n  return <span className=\"font-mono text-lg text-muted-foreground w-6 text-center\">{rank}</span>;\n};\n\nexport default async function LeaderboardPage() {\n  let leaderboard: UserScore[] = [];\n  let fetchError: string | null = null;\n  \n  try {\n      leaderboard = await getLeaderboardData();\n  } catch (error: any) {\n      fetchError = error.message;\n  }\n\n  return <LeaderboardClient leaderboard={leaderboard} fetchError={fetchError} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;;;;;AAUA,eAAe;IACb,IAAI,CAAC,sHAAA,CAAA,KAAE,EAAE;QACP,QAAQ,KAAK,CAAC;QACd,OAAO,EAAE;IACX;IACA,MAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;IAChC,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,cAAc,SAAS,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE;IAE/D,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,MAAM,cAA2B,EAAE;QACnC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,IAAI,IAAI;YACrB,YAAY,IAAI,CAAC;gBACf,IAAI,IAAI,EAAE;gBACV,aAAa,KAAK,WAAW,IAAI;gBACjC,UAAU,KAAK,QAAQ,IAAI;gBAC3B,YAAY,KAAK,UAAU,IAAI;YACjC;QACF;QACA,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,IAAI,MAAM,IAAI,KAAK,qBAAqB;YACpC,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,MAAM,WAAW,CAAC,EAAE,IAAI,EAAoB;IAC1C,IAAI,SAAS,GAAG,qBAAO,8OAAC;QAAM,WAAU;;;;;;IACxC,IAAI,SAAS,GAAG,qBAAO,8OAAC;QAAM,WAAU;;;;;;IACxC,IAAI,SAAS,GAAG,qBAAO,8OAAC;QAAM,WAAU;;;;;;IACxC,qBAAO,8OAAC;QAAK,WAAU;kBAA2D;;;;;;AACpF;AAEe,eAAe;IAC5B,IAAI,cAA2B,EAAE;IACjC,IAAI,aAA4B;IAEhC,IAAI;QACA,cAAc,MAAM;IACxB,EAAE,OAAO,OAAY;QACjB,aAAa,MAAM,OAAO;IAC9B;IAEA,qBAAO,8OAAC,mJAAA,CAAA,oBAAiB;QAAC,aAAa;QAAa,YAAY;;;;;;AAClE","debugId":null}}]
}